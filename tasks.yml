---
# tasks file for packages
- name: creating a folder/directory
  file:
    name: /home/testserver/myproject
    state: directory
    recurse: yes
  become_user: testserver
  become: yes

- name: clone git repo
  git:
    repo: https://github.com/akshaykumart/Django.git
    dest: /home/testserver/myproject
    clone: yes
    update: yes
    force: yes

- name: Install Required packages
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  loop:
    - mysql-server
    - mysql-client
    - python3-mysqldb
    - libmysqlclient-dev
    - python3-virtualenv
    - python3-dev
    - default-libmysqlclient-dev
    - build-essential
    - nginx
    - python3
    - python3-pip

- name: Install additional packages
  pip:
    name: "{{item}}"
    state: present

  loop:
    - mysqlclient
    - pymysql
  become: yes

- name: start and enable mysql service
  service:
    name: mysql
    state: started
    enabled: yes

 
- name: Set MySQL root password
  mysql_user:
    login_password: "{{ root_pass }}"
    name: root
    password: '{{ root_pass }}'
    check_implicit_admin: true

- name: creating mysql user
  mysql_user:
    login_user: 'root'
    login_password: "{{ root_pass }}"
    name: "{{db_user}}"
    password: "{{db_pass}}"
    priv: '*.*:ALL'
    host: '%'
    state: present

- name: creating details db
  mysql_db:
    name: "{{db_name}}"
    state: present
    login_user: root
    login_password: "{{root_pass}}"
  register: db_created

- name: Create virtualenv for app
  pip:
    name: myenv
    state: latest
    virtualenv: /home/testserver/myenv
  become: yes

- name: Copying requirements.txt file
  template:
    src: /home/akshay/myproject/ansible/template/requirements.txt
    dest: /home/testserver/myproject/requirements.txt
  become_user: testserver
  become: yes

- name: Install django and gunicorn in virtual env
  pip:
    requirements: "/home/testserver/myproject/requirements.txt"
    virtualenv: "/home/testserver/myenv"
    virtualenv_command: virtualenv

- name: Creating gunicorn socket file
  template:
    src: /home/akshay/myproject/ansible/template/gunicorn.socket
    dest: /etc/systemd/system/gunicorn.socket

- name: Creating gunicorn service file
  template:
    src: /home/akshay/myproject/ansible/template/gunicorn.service
    dest: /etc/systemd/system/gunicorn.service

- name: Creating nginx config file
  template:
    src: /home/akshay/myproject/ansible/template/mysite.conf
    dest: /etc/nginx/sites-available/mysite.conf

- name: symlink nginx configuration
  command: ln -s /etc/nginx/sites-available/mysite.conf /etc/nginx/sites-enabled

- name: Removing default nginx config file
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent

- name: Allow all access to tcp port 80
  ufw:
    rule: allow
    port: '80'
    proto: tcp

- name: start and enable gunicorn socket
  service:
    name: gunicorn.socket
    state: started
    enabled: yes

- name: start and enable gunicorn service
  service:
    name: gunicorn.service
    state: started
    enabled: yes
    
- name: makemigrations
  shell: |
    /home/testserver/myenv/bin/python /home/testserver/myproject/manage.py makemigrations

- name: migrate
  shell: |
    /home/testserver/myenv/bin/python /home/testserver/myproject/manage.py migrate


